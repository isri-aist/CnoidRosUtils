name: CI of CnoidRosUtils

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'
  schedule:
    - cron: '0 0 * * 0'

jobs:
  build-and-test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04]
        catkin-build: [catkin, standalone]
        build-type: [RelWithDebInfo, Debug]
        mc-rtc-version: [head, stable]
        exclude:
          - build-type: Debug
            mc-rtc-version: stable
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install dependencies
        uses: jrl-umi3218/github-actions/install-dependencies@master
        with:
          ubuntu: |
            apt-mirrors:
              mc-rtc:
                cloudsmith: mc-rtc/${{ matrix.mc-rtc-version }}
            apt: libmc-rtc-dev doxygen graphviz choreonoid libcnoid-dev
          ros: |
            apt: ros-base mc-rtc-plugin eigen-conversions
      - name: Checkout repository code
        if: matrix.catkin-build == 'standalone'
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Catkin build
        if: matrix.catkin-build == 'catkin'
        uses: jrl-umi3218/github-actions/build-catkin-project@master
        with:
          build-type: ${{ matrix.build-type }}
          cmake-args: -DINSTALL_DOCUMENTATION=ON
      - name: Standalone build
        if: matrix.catkin-build == 'standalone'
        uses: jrl-umi3218/github-actions/build-cmake-project@master
        with:
          build-type: ${{ matrix.build-type }}
      - name: Upload documentation
        # Only run for one configuration and on master branch
        if: matrix.os == 'ubuntu-20.04' && matrix.catkin-build == 'catkin' && matrix.build-type == 'RelWithDebInfo' && matrix.mc-rtc-version == 'head' && github.repository_owner == 'isri-aist' && github.ref == 'refs/heads/master'
        run: |
          set -e
          set -x
          cd ${GITHUB_WORKSPACE}/catkin_ws/src/isri-aist/CnoidRosUtils
          git config --global user.name "Masaki Murooka"
          git config --global user.email "m-murooka@aist.go.jp"
          git remote set-url origin "https://mmurooka:${{ secrets.CI_TOKEN }}@github.com/isri-aist/CnoidRosUtils"
          git fetch --depth=1 origin gh-pages:gh-pages
          git clean -dfx
          git checkout --quiet gh-pages
          rm -rf doxygen/
          cp -r ${GITHUB_WORKSPACE}/catkin_ws/build/cnoid_ros_utils/doc/html/ doxygen
          git add doxygen
          git_status=`git status -s`
          if test -n "$git_status"; then
            git commit --quiet -m "Update Doxygen HTML files from commit ${{ github.sha }}"
            git push origin gh-pages
          else
            echo "Github pages documentation is already up-to-date."
          fi
